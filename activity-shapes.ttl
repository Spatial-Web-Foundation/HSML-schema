@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix act: <https://www.spatialwebfoundation.org/ns/hsml/activity#> .
@prefix agt: <https://www.spatialwebfoundation.org/ns/hsml/agent#> .
@prefix core: <https://www.spatialwebfoundation.org/ns/hsml/core#> .
@prefix act-sh: <https://www.spatialwebfoundation.org/ns/hsml/activity-shapes#> .
@prefix agt-sh: <https://www.spatialwebfoundation.org/ns/hsml/agent-shapes#> .
@prefix core-sh: <https://www.spatialwebfoundation.org/ns/hsml/core-shapes#> .
@prefix schema: <https://schema.org/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

#
# === Enhanced Activity Shapes ===
#

act-sh:ActivityShape
  a sh:NodeShape ;
  sh:targetClass act:Activity ;
  sh:node core-sh:EntityShape ;
  sh:property [
    sh:path act:activitySchema ;
    sh:name "activitySchema" ;
    sh:description "Links the Activity instance to the ActivitySchema it implements." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:or (
      [ sh:class act:ActivitySchema ]
      [ sh:class act:CompositeActivitySchema ]
    ) ;
    sh:message "An Activity must have exactly one act:activitySchema (either ActivitySchema or CompositeActivitySchema)." ;
  ] ;
  sh:property [
    sh:path act:performedBy ;
    sh:name "performedBy" ;
    sh:description "Identifies the Agent(s) responsible for performing the Activity." ;
    sh:minCount 1 ;
    sh:class agt:Agent ;
    sh:message "An Activity must have at least one act:performedBy agent." ;
  ] ;
  sh:property [
    sh:path act:status ;
    sh:name "status" ;
    sh:description "The current lifecycle state of the Activity." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:in ( act:Completed act:InProgress act:Failed act:Cancelled ) ;
    sh:message "An Activity must have exactly one act:status from the allowed enumeration." ;
  ] ;
  sh:property [
    sh:path act:hasBinding ;
    sh:name "hasBinding" ;
    sh:description "Associates a VariableBinding with the Activity." ;
    sh:class act:VariableBinding ;
    sh:message "A VariableBinding must be an instance of act:VariableBinding." ;
  ] .

#
# === Enhanced ActivitySchema Shapes ===
#

act-sh:ActivitySchemaShape
  a sh:NodeShape ;
  sh:targetClass act:ActivitySchema ;
  sh:node core-sh:EntityShape ;
  sh:property [
    sh:path act:hasInput ;
    sh:name "hasInput" ;
    sh:description "Specifies input variables for an ActivitySchema." ;
    sh:class act:Variable ;
    sh:minCount 0 ;
    sh:message "Input variables must be instances of act:Variable." ;
  ] ;
  sh:property [
    sh:path act:hasOutput ;
    sh:name "hasOutput" ;
    sh:description "Specifies output variables for an ActivitySchema." ;
    sh:class act:Variable ;
    sh:minCount 0 ;
    sh:message "Output variables must be instances of act:Variable." ;
  ] ;
  sh:property [
    sh:path schema:identifier ;
    sh:name "identifier" ;
    sh:description "A unique identifier for the ActivitySchema." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivitySchema must have exactly one schema:identifier." ;
  ] ;
  sh:property [
    sh:path schema:name ;
    sh:name "name" ;
    sh:description "A human-readable name for the ActivitySchema." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivitySchema must have exactly one schema:name." ;
  ] ;
  sh:property [
    sh:path schema:description ;
    sh:name "description" ;
    sh:description "A detailed description of the ActivitySchema." ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivitySchema can have at most one schema:description." ;
  ] .

#
# === Enhanced CompositeActivitySchema Shapes ===
#

act-sh:CompositeActivitySchemaShape
  a sh:NodeShape ;
  sh:targetClass act:CompositeActivitySchema ;
  sh:node act-sh:ActivitySchemaShape ;
  sh:property [
    sh:path act:hasStep ;
    sh:name "hasStep" ;
    sh:description "Associates ActivitySteps with a CompositeActivitySchema." ;
    sh:minCount 1 ;
    sh:node act-sh:ActivityStepListShape ;
    sh:message "A CompositeActivitySchema must have at least one step defined as an RDF list." ;
  ] ;
  sh:property [
    sh:path act:hasDataLink ;
    sh:name "hasDataLink" ;
    sh:description "Associates DataLinks with a CompositeActivitySchema." ;
    sh:class act:DataLink ;
    sh:minCount 0 ;
    sh:message "DataLinks must be instances of act:DataLink." ;
  ] .

#
# === Enhanced ActivityStep Shapes ===
#

act-sh:ActivityStepShape
  a sh:NodeShape ;
  sh:targetClass act:ActivityStep ;
  sh:property [
    sh:path schema:identifier ;
    sh:name "identifier" ;
    sh:description "A unique identifier for the ActivityStep." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivityStep must have exactly one schema:identifier." ;
  ] ;
  sh:property [
    sh:path act:usesSchema ;
    sh:name "usesSchema" ;
    sh:description "Links the step to the ActivitySchema defining its logic." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:or (
      [ sh:class act:ActivitySchema ]
      [ sh:class act:CompositeActivitySchema ]
    ) ;
    sh:message "An ActivityStep must use exactly one act:usesSchema (either ActivitySchema or CompositeActivitySchema)." ;
  ] ;
  sh:property [
    sh:path schema:name ;
    sh:name "name" ;
    sh:description "A human-readable name for the ActivityStep." ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivityStep can have at most one schema:name." ;
  ] ;
  sh:property [
    sh:path schema:description ;
    sh:name "description" ;
    sh:description "A detailed description of the ActivityStep." ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "An ActivityStep can have at most one schema:description." ;
  ] .

#
# === Enhanced RDF List Validation for ActivitySteps ===
#

act-sh:ActivityStepListShape
  a sh:NodeShape ;
  sh:property [
    sh:path rdf:first ;
    sh:name "first" ;
    sh:description "The first element in the RDF list must be an ActivityStep." ;
    sh:node act-sh:ActivityStepShape ;
    sh:message "Each element in the RDF list must be an instance of act:ActivityStep." ;
  ] ;
  sh:property [
    sh:path rdf:rest ;
    sh:name "rest" ;
    sh:description "The rest of the RDF list must either be nil (end of list) or another ActivityStepListShape (recursive continuation)." ;
    sh:or (
      [ sh:hasValue rdf:nil ]
      [ sh:node act-sh:ActivityStepListShape ]
    ) ;
    sh:message "The RDF list must properly terminate with rdf:nil or continue recursively." ;
  ] .

#
# === Enhanced Variable Shapes ===
#

act-sh:VariableShape
  a sh:NodeShape ;
  sh:targetClass act:Variable ;
  sh:property [
    sh:path schema:identifier ;
    sh:name "identifier" ;
    sh:description "A unique identifier for the Variable." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A Variable must have exactly one schema:identifier." ;
  ] ;
  sh:property [
    sh:path schema:name ;
    sh:name "name" ;
    sh:description "A short, human-readable name for the Variable." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A Variable must have exactly one human-readable schema:name." ;
  ] ;
  sh:property [
    sh:path schema:description ;
    sh:name "description" ;
    sh:description "A detailed explanation of the Variable's purpose." ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A Variable can have at most one schema:description." ;
  ] ;
  sh:property [
    sh:path act:expects ;
    sh:name "expects" ;
    sh:description "A declaration of the expected data type(s) or class(es) for the variable's value." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:nodeKind sh:IRI ;
    sh:message "Expected types must be valid IRI nodes that reference classes or datatypes." ;
  ] .

#
# === Enhanced VariableBinding Shapes ===
#

act-sh:VariableBindingShape
  a sh:NodeShape ;
  sh:targetClass act:VariableBinding ;
  sh:property [
    sh:path act:variable ;
    sh:name "variable" ;
    sh:description "Connects a VariableBinding to the identifier of the Variable it parameterizes." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A VariableBinding must specify exactly one act:variable." ;
  ] ;
  sh:property [
    sh:path rdf:value ;
    sh:name "value" ;
    sh:description "The concrete value (IRI for an entity or a Literal for data) assigned in a VariableBinding." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "A VariableBinding must provide exactly one rdf:value." ;
  ] .

#
# === Enhanced DataLink Shapes ===
#

act-sh:DataLinkShape
  a sh:NodeShape ;
  sh:targetClass act:DataLink ;
  sh:property [
    sh:path act:sourceStep ;
    sh:name "sourceStep" ;
    sh:description "The identifier of the source ActivityStep for the data link." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A DataLink must have exactly one act:sourceStep." ;
  ] ;
  sh:property [
    sh:path act:sourceVariable ;
    sh:name "sourceVariable" ;
    sh:description "The identifier of the source Variable for the data link." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A DataLink must have exactly one act:sourceVariable." ;
  ] ;
  sh:property [
    sh:path act:targetStep ;
    sh:name "targetStep" ;
    sh:description "The identifier of the target ActivityStep for the data link." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A DataLink must have exactly one act:targetStep." ;
  ] ;
  sh:property [
    sh:path act:targetVariable ;
    sh:name "targetVariable" ;
    sh:description "The identifier of the target Variable for the data link." ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A DataLink must have exactly one act:targetVariable." ;
  ] ;
  sh:property [
    sh:path schema:description ;
    sh:name "description" ;
    sh:description "A description of what the data link accomplishes." ;
    sh:minCount 0 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:message "A DataLink can have at most one schema:description." ;
  ] .

#
# === Advanced Validation Shapes ===
#

# Enhanced shape to validate the internal consistency of a CompositeActivitySchema
act-sh:CompositeActivitySchemaConsistencyShape
  a sh:NodeShape ;
  sh:targetClass act:CompositeActivitySchema ;
  
  # Rule: All steps in the composite schema must have unique identifiers
  sh:property [
    sh:path act:hasStep ;
    sh:name "uniqueStepIdentifiers" ;
    sh:description "All ActivitySteps in a CompositeActivitySchema must have unique identifiers." ;
    sh:node act-sh:ActivityStepListShape ;
    sh:message "All ActivitySteps in a CompositeActivitySchema must have unique identifiers." ;
  ] ;
  
  # Rule: All variables in the composite schema must have unique identifiers
  sh:property [
    sh:path ( act:hasInput schema:identifier ) ;
    sh:name "uniqueInputIdentifiers" ;
    sh:description "All input Variables in a CompositeActivitySchema must have unique identifiers." ;
    sh:uniqueLang true ;
    sh:message "All input Variables in a CompositeActivitySchema must have unique identifiers." ;
  ] ;
  
  sh:property [
    sh:path ( act:hasOutput schema:identifier ) ;
    sh:name "uniqueOutputIdentifiers" ;
    sh:description "All output Variables in a CompositeActivitySchema must have unique identifiers." ;
    sh:uniqueLang true ;
    sh:message "All output Variables in a CompositeActivitySchema must have unique identifiers." ;
  ] .

# Enhanced shape to validate Activity bindings against their schema
act-sh:ActivityBindingValidationShape
  a sh:NodeShape ;
  sh:targetClass act:Activity ;
  
  # Rule: VariableBinding identifiers must match input variables in the schema
  sh:property [
    sh:path act:hasBinding ;
    sh:name "validBindingVariables" ;
    sh:description "VariableBinding identifiers must match input variables defined in the ActivitySchema." ;
    sh:class act:VariableBinding ;
    sh:message "VariableBinding identifiers must match input variables defined in the ActivitySchema." ;
  ] .

# Enhanced shape to validate ActivitySchema consistency
act-sh:ActivitySchemaConsistencyShape
  a sh:NodeShape ;
  sh:targetClass act:ActivitySchema ;
  
  # Rule: All variables in an ActivitySchema must have unique identifiers
  sh:property [
    sh:path ( act:hasInput schema:identifier ) ;
    sh:name "uniqueInputIdentifiers" ;
    sh:description "All input Variables in an ActivitySchema must have unique identifiers." ;
    sh:uniqueLang true ;
    sh:message "All input Variables in an ActivitySchema must have unique identifiers." ;
  ] ;
  
  sh:property [
    sh:path ( act:hasOutput schema:identifier ) ;
    sh:name "uniqueOutputIdentifiers" ;
    sh:description "All output Variables in an ActivitySchema must have unique identifiers." ;
    sh:uniqueLang true ;
    sh:message "All output Variables in an ActivitySchema must have unique identifiers." ;
  ] .

#
# === Cross-Reference Validation Shapes ===
#

# Shape to validate that DataLinks reference valid steps and variables
act-sh:DataLinkReferenceValidationShape
  a sh:NodeShape ;
  sh:targetClass act:DataLink ;
  
  # Rule: DataLink sourceStep must reference a valid step identifier
  sh:property [
    sh:path act:sourceStep ;
    sh:name "validSourceStep" ;
    sh:description "DataLink sourceStep must reference a valid ActivityStep identifier." ;
    sh:pattern "^[a-zA-Z_][a-zA-Z0-9_]*$" ;
    sh:message "DataLink sourceStep must be a valid identifier." ;
  ] ;
  
  # Rule: DataLink targetStep must reference a valid step identifier
  sh:property [
    sh:path act:targetStep ;
    sh:name "validTargetStep" ;
    sh:description "DataLink targetStep must reference a valid ActivityStep identifier." ;
    sh:pattern "^[a-zA-Z_][a-zA-Z0-9_]*$" ;
    sh:message "DataLink targetStep must be a valid identifier." ;
  ] ;
  
  # Rule: DataLink sourceVariable must reference a valid variable identifier
  sh:property [
    sh:path act:sourceVariable ;
    sh:name "validSourceVariable" ;
    sh:description "DataLink sourceVariable must reference a valid Variable identifier." ;
    sh:pattern "^[a-zA-Z_][a-zA-Z0-9_]*$" ;
    sh:message "DataLink sourceVariable must be a valid identifier." ;
  ] ;
  
  # Rule: DataLink targetVariable must reference a valid variable identifier
  sh:property [
    sh:path act:targetVariable ;
    sh:name "validTargetVariable" ;
    sh:description "DataLink targetVariable must reference a valid Variable identifier." ;
    sh:pattern "^[a-zA-Z_][a-zA-Z0-9_]*$" ;
    sh:message "DataLink targetVariable must be a valid identifier." ;
  ] .
